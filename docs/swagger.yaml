basePath: /
definitions:
  github.User:
    properties:
      avatar_url:
        type: string
      bio:
        type: string
      blog:
        type: string
      collaborators:
        type: integer
      company:
        type: string
      created_at:
        type: string
      disk_usage:
        type: integer
      email:
        type: string
      events_url:
        type: string
      followers:
        type: integer
      followers_url:
        type: string
      following:
        type: integer
      following_url:
        type: string
      gists_url:
        type: string
      gravatar_id:
        type: string
      hireable:
        type: boolean
      html_url:
        type: string
      id:
        type: integer
      location:
        type: string
      login:
        type: string
      name:
        type: string
      node_id:
        type: string
      organizations_url:
        type: string
      owned_private_repos:
        type: integer
      private_gists:
        type: integer
      public_gists:
        type: integer
      public_repos:
        type: integer
      received_events_url:
        type: string
      repos_url:
        type: string
      site_admin:
        type: boolean
      starred_url:
        type: string
      subscriptions_url:
        type: string
      total_private_repos:
        type: integer
      two_factor_authentication:
        type: boolean
      type:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  github.UserResp:
    properties:
      code:
        type: integer
      user:
        $ref: '#/definitions/github.User'
    type: object
  model.Barrage:
    properties:
      content:
        type: string
      second:
        type: integer
      timestamp:
        type: integer
      user_uuid:
        type: string
      uuid:
        type: string
      video_uuid:
        type: string
    required:
    - content
    - second
    - timestamp
    - user_uuid
    - uuid
    - video_uuid
    type: object
  model.BarrageCountResp:
    properties:
      code:
        type: integer
      count:
        type: integer
    type: object
  model.BarrageListResp:
    properties:
      barrage_list:
        items:
          $ref: '#/definitions/model.Barrage'
        type: array
      code:
        type: integer
      total:
        type: integer
    type: object
  model.BarrageResp:
    properties:
      barrage:
        $ref: '#/definitions/model.Barrage'
      code:
        type: integer
    type: object
  model.OperationResp:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
host: 127.0.0.1:9000
info:
  contact: {}
  description: "DevScope中间件（DevScope-Middleware）是一个基于 Fiber 的 RESTful API 服务，用于提供DevScope（DevScope）的后端服务。\n注意，有
    \U0001F9B8 标识的接口需要管理员权限才能访问。"
  title: DevScope中间件
  version: v1.0.0
paths:
  /barrage/add:
    post:
      consumes:
      - application/json
      description: 添加Barrage
      parameters:
      - description: 视频UUID
        in: query
        name: video_uuid
        required: true
        type: string
      - description: 弹幕内容
        in: query
        name: content
        required: true
        type: string
      - description: 弹幕秒数
        in: query
        name: second
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OperationResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      security:
      - ApiKeyAuth: []
      summary: 添加Barrage
      tags:
      - 弹幕管理
  /barrage/count:
    get:
      consumes:
      - application/json
      description: 获取Barrage数量
      parameters:
      - description: 视频UUID
        in: query
        name: video_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BarrageCountResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      summary: 获取Barrage数量
      tags:
      - 弹幕管理
  /barrage/get:
    get:
      consumes:
      - application/json
      description: 获取Barrage
      parameters:
      - description: 弹幕UUID
        in: query
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BarrageResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      summary: 获取Barrage
      tags:
      - 弹幕管理
  /barrage/list:
    get:
      consumes:
      - application/json
      description: 获取Barrage列表
      parameters:
      - description: 视频UUID
        in: query
        name: video_uuid
        required: true
        type: string
      - description: 页数
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BarrageListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      summary: 获取Barrage列表
      tags:
      - 弹幕管理
  /barrage/recent_list:
    get:
      consumes:
      - application/json
      description: 获取最近的Barrage列表
      parameters:
      - description: 视频UUID
        in: query
        name: video_uuid
        required: true
        type: string
      - description: 弹幕秒数
        in: query
        name: second
        required: true
        type: integer
      - description: 几秒内的
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BarrageListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      summary: 获取最近的Barrage列表
      tags:
      - 弹幕管理
  /github/user/info:
    get:
      consumes:
      - application/json
      description: 获取开发者基本信息
      parameters:
      - description: Github用户名
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.UserResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.OperationResp'
      summary: 获取开发者基本信息
      tags:
      - Github
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
